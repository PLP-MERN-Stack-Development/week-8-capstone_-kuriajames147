{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning center\\\\plp\\\\Mern\\\\Week 8 final project\\\\week-8-capstone_-kuriajames147\\\\frontend\\\\src\\\\components\\\\tasks\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  teamId,\n  onTaskCreated\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    team: teamId || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.title.trim()) {\n      setError('Title is required');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await api.post('/tasks', formData);\n      onTaskCreated(response.data);\n      setFormData({\n        title: '',\n        description: '',\n        team: teamId || ''\n      });\n      setError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create task');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: formData.title,\n        onChange: e => setFormData({\n          ...formData,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Creating...' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"5J8VossW2QqL2aMGZBr0H4lcVIM=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","api","jsxDEV","_jsxDEV","TaskForm","teamId","onTaskCreated","_s","formData","setFormData","title","description","team","loading","setLoading","error","setError","handleSubmit","e","preventDefault","trim","response","post","data","err","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["D:/Learning center/plp/Mern/Week 8 final project/week-8-capstone_-kuriajames147/frontend/src/components/tasks/TaskForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport api from '../../services/api';\r\n\r\nexport default function TaskForm({ teamId, onTaskCreated }) {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    team: teamId || ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.title.trim()) {\r\n      setError('Title is required');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const response = await api.post('/tasks', formData);\r\n      onTaskCreated(response.data);\r\n      setFormData({\r\n        title: '',\r\n        description: '',\r\n        team: teamId || ''\r\n      });\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create task');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form\">\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={formData.title}\r\n          onChange={(e) => setFormData({...formData, title: e.target.value})}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={formData.description}\r\n          onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Creating...' : 'Add Task'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAEP,MAAM,IAAI;EAClB,CAAC,CAAC;EACF,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,QAAQ,CAACE,KAAK,CAACU,IAAI,CAAC,CAAC,EAAE;MAC1BJ,QAAQ,CAAC,mBAAmB,CAAC;MAC7B;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,QAAQ,EAAEd,QAAQ,CAAC;MACnDF,aAAa,CAACe,QAAQ,CAACE,IAAI,CAAC;MAC5Bd,WAAW,CAAC;QACVC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAEP,MAAM,IAAI;MAClB,CAAC,CAAC;MACFW,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOQ,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZV,QAAQ,CAAC,EAAAS,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,uBAAuB,CAAC;IAClE,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBd,KAAK,iBAAIZ,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtD9B,OAAA;MAAM+B,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBAC3B1B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAE7B,QAAQ,CAACE,KAAM;QACtB4B,QAAQ,EAAGpB,CAAC,IAAKT,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEE,KAAK,EAAEQ,CAAC,CAACqB,MAAM,CAACF;QAAK,CAAC,CAAE;QACnEG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF9B,OAAA;QACEiC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAE7B,QAAQ,CAACG,WAAY;QAC5B2B,QAAQ,EAAGpB,CAAC,IAAKT,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEG,WAAW,EAAEO,CAAC,CAACqB,MAAM,CAACF;QAAK,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eACF9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACM,QAAQ,EAAE5B,OAAQ;QAAAgB,QAAA,EACrChB,OAAO,GAAG,aAAa,GAAG;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CAvDuBH,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}