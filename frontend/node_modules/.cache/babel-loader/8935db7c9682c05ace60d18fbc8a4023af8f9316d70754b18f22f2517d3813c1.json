{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nconst useSocket = eventHandlers => {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    var _process$env$REACT_AP;\n    // Connect to Socket.io server\n    socketRef.current = io(((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000');\n\n    // Set up event listeners\n    Object.entries(eventHandlers).forEach(([event, handler]) => {\n      socketRef.current.on(event, handler);\n    });\n\n    // Clean up on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [eventHandlers]);\n  const emit = (event, data) => {\n    if (socketRef.current) {\n      socketRef.current.emit(event, data);\n    }\n  };\n  return {\n    emit,\n    socket: socketRef.current\n  };\n};\n_s(useSocket, \"8c0rAI93JE8jpOVTnobt43KkFfY=\");\nexport default useSocket;","map":{"version":3,"names":["useEffect","useRef","io","useSocket","eventHandlers","_s","socketRef","_process$env$REACT_AP","current","process","env","REACT_APP_API_URL","replace","Object","entries","forEach","event","handler","on","disconnect","emit","data","socket"],"sources":["D:/Learning center/plp/Mern/Week 8 final project/week-8-capstone_-kuriajames147/frontend/src/hooks/useSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst useSocket = (eventHandlers) => {\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Connect to Socket.io server\r\n    socketRef.current = io(process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000');\r\n\r\n    // Set up event listeners\r\n    Object.entries(eventHandlers).forEach(([event, handler]) => {\r\n      socketRef.current.on(event, handler);\r\n    });\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [eventHandlers]);\r\n\r\n  const emit = (event, data) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit(event, data);\r\n    }\r\n  };\r\n\r\n  return { emit, socket: socketRef.current };\r\n};\r\n\r\nexport default useSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,SAAS,GAAIC,aAAa,IAAK;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IAAA,IAAAO,qBAAA;IACd;IACAD,SAAS,CAACE,OAAO,GAAGN,EAAE,CAAC,EAAAK,qBAAA,GAAAE,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAJ,qBAAA,uBAA7BA,qBAAA,CAA+BK,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAI,uBAAuB,CAAC;;IAErG;IACAC,MAAM,CAACC,OAAO,CAACV,aAAa,CAAC,CAACW,OAAO,CAAC,CAAC,CAACC,KAAK,EAAEC,OAAO,CAAC,KAAK;MAC1DX,SAAS,CAACE,OAAO,CAACU,EAAE,CAACF,KAAK,EAAEC,OAAO,CAAC;IACtC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIX,SAAS,CAACE,OAAO,EAAE;QACrBF,SAAS,CAACE,OAAO,CAACW,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACf,aAAa,CAAC,CAAC;EAEnB,MAAMgB,IAAI,GAAGA,CAACJ,KAAK,EAAEK,IAAI,KAAK;IAC5B,IAAIf,SAAS,CAACE,OAAO,EAAE;MACrBF,SAAS,CAACE,OAAO,CAACY,IAAI,CAACJ,KAAK,EAAEK,IAAI,CAAC;IACrC;EACF,CAAC;EAED,OAAO;IAAED,IAAI;IAAEE,MAAM,EAAEhB,SAAS,CAACE;EAAQ,CAAC;AAC5C,CAAC;AAACH,EAAA,CA3BIF,SAAS;AA6Bf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}